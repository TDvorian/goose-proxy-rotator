#!/usr/bin/env node

"use strict";

    var JFile=require('jfile');

    var fs = require('fs');
let proxies = [];
const { execSync } = require('child_process');
execSync('rm -f PROXY.txt');
execSync('sh g.sh');
var myF=new JFile("PROXY.txt");
console.log('download '+ myF.lines.length +' proxys');
myF.lines.forEach(function(proxy) {
 let p = {host: proxy.split(":")[0],
 port: proxy.split(":")[1]}
 proxies.push(p);
});

var file = fs.createWriteStream('cache_peers.conf');
file.on('error', function(err) { /* error handling */ });
proxies.forEach(function(v) { file.write("cache_peer " + v.host + " parent " + v.port + " 0 round-robin no-query no-digest" + '\n'); });
file.end();
